<?xml version="1.0" ?>
<!-- 2020.9.28 tominaga
  平面・斜面検出ノードのデバッグができるようにテストフラグ"test"を追加
  test == true でpcdファイルをPointCloud2にしてパブリッシュするノードが動く
  test == false はリアルタイムでセンサと連携するモード
  "pcdfile"変数にpcdファイルまでの絶対パスを入れてroslaunchしてください
-->

<launch>
  <!-- frag for input test data -->
  <arg name="test" default="false"/>
  <arg name="rviz_switch" default="false"/>
  <arg name="pcdfile" default="/home/soma1/catkin_ws/src/soma_ros_pkg/soma_ros/data/outside_tf.pcd"/>

  <arg name="camera_name" default="camera_L"/>
  <arg name="frame_id" default="soma_link"/>
  <arg name="input_points" default="/$(arg camera_name)/prefiltered"/>
  <arg name="input_imu" default="/imu/data"/>
	
  <!-- launch the nodelet manager -->
  <arg name="nodelet_manager_name" default="soma_vision_manager"/>
  <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager_name)" args="manager" output="screen" />

  <!-- passthrough z_axis -->
  <node pkg="nodelet" type="nodelet" name="plane_z_filter" args="load pcl/PassThrough $(arg nodelet_manager_name)">
      <remap from="~input" to="/$(arg input_points)"/>
      <param name="input_frame" value="$(arg camera_name)_color_optical_frame"/>
      <param name="filter_field_name" value="y"/>
      <param name="filter_limit_min" value="0.1"/>
      <param name="filter_limit_max" value="0.8"/>
      <param name="filter_limit_negative" value="false"/>
  </node>

  <!-- launch Plane Segmentation nodelet -->
  <node pkg="nodelet" type="nodelet" name="plane_segmenatation"
        args="load soma_perception/PlaneSegmentationNodelet $(arg nodelet_manager_name)">
        <param name="base_link" value="$(arg frame_id)"/>
        <param name="setted_slope_tilt" value="20.0"/>
        <param name="setted_ground_tilt" value="5.0"/>
        <param name="distance_thres" value="0.01"/>
        <param name="cluster_tolerance" value="0.05"/>
        <param name="min_clustersize" value="100"/>

        <remap from="input_points" to="/plane_z_filter/output"/>
        <remap from="input_imu" to="$(arg input_imu)"/>

  </node>

  <group if="$(arg test)">
    
    <!-- pcd to pointcloud2 -->
    <node pkg="pcl_ros" type="pcd_to_pointcloud" name="pcd2PC2" args="$(arg pcdfile) 0.1">
      <param name="~frame_id" value="camera_link"/>

      <!-- remap publish topic name -->
      <remap from="cloud_pcd" to="$(arg input_points)"/>
    </node>

    <!-- transform parameter and node -->
    <arg name="rot_x" value="$(eval 180.0/180.0*3.1415)"/>
    <arg name="rot_y" value="$(eval 90.0/180.0*3.1415)"/>
    <arg name="rot_z" value="$(eval -90.0/180.0*3.1415)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="Cam2Base"
    args="0 0 0.5 $(arg rot_x) 0 $(arg rot_z) $(arg frame_id) camera_link" />
  
  </group>
</launch>
