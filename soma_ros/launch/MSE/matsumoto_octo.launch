<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>

	<arg name="nodelet_manager" default="velodyne_nodelet_manager"/>

	<!--node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" output="screen"/-->

	<node pkg="nodelet" type="nodelet" name="octomap_server_nodelet" args="load octomap_server/OctomapServerNodelet $(arg nodelet_manager)">
		<param name="resolution" value="0.1" />
		<param name="frame_id" type="string" value="map" />
		<param name="sensor_model/max_range" value="20.0" />
		<!-- <param name="sensor_model/min" value="0.1" /-->
		<!-- param name="sensor_model/max" value="0.4" /-->
		<param name="sensor_model/hit" value="0.7" />
		<param name="sensor_model/miss" value="0.2" /> -->
		<remap from="cloud_in" to="filtered_points" />
	</node>

	<!-- <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager"/> -->

	<!-- node pkg="nodelet" type="nodelet" name="pt" args="load pcl/PassThrough nodelet_manager">
		  <param name="filter_limit_max" value="5.0" />
		  <param name="filter_limit_min" value="-1.2" />
		  <param name="filter_limit_negative" value="false" />
		  <param name="input_frame" value="velodyne" />
		  <param name="output_frame" value="velodyne" />
		  <remap from="~input" to="/velodyne_points" />
		  <remap from="~output" to="/velodyne_points_f" />
	</node-->

	<!-- <node pkg="octomap_server" type="octomap_server_node" name="octomap_server"> -->
	<!-- <param name="resolution" value="0.05" /> -->

	<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
	<!-- <param name="frame_id" type="string" value="map" /> -->

	<!-- maximum range to integrate (speedup!) -->
	<!-- <param name="sensor_model/max_range" value="20.0" /> -->

	<!-- <param name="sensor_model/min" value="0.12" /> -->
	<!-- <param name="sensor_model/max" value="0.98" /> -->

	<!-- <param name="sensor_model/hit" value="0.7" /> -->
	<!-- <param name="sensor_model/miss" value="0.4" /> -->

	<!-- <param name="latch" value="false" /> -->
	<!-- <param name="filter_ground" value="false" /> -->

	<!-- data source to integrate (PointCloud2) -->
	<!-- <remap from="cloud_in" to="/velodyne_points_f" /> -->
	<!--remap from="cloud_in" to="filtered_points" /-->

	<!-- </node> -->




</launch>
