<!--
 basic launch file for realsense camera (D435 or i)
-->

<launch>
    <arg name="base_link" default="soma_link"/>

    <arg name="camera_name" default="camera"/>
    <arg name="serial_no" default=""/>

    <!-- transform parameters -->
    <arg name="use_center_frame" default="true"/>
    <arg name="pan_angle" default="0"/>
    <arg name="tilt_angle" default="0"/>
    <arg name="role_angle" default="0"/>
    <arg name="tx" default="0"/>
    <arg name="ty" default="0"/>
    <arg name="tz" default="0"/>

    <!-- launch realsense camera device nodelet and nodelet manager -->
    <!-- namespace is followed with camera_name -->
    <include file="$(find realsense2_camera)/launch/rs_rgbd.launch">
        <arg name="camera" value="$(arg camera_name)"/>
        <arg name="serial_no" value="$(arg serial_no)"/>
        <arg name="external_manager" value="false"/>
        <arg name="manager" value="realsense2_manager_$(arg camera_name)"/>

        <arg name="enable_fisheye" value="false"/>
        <arg name="enable_infra1" value="false"/>
        <arg name="enable_infra2" value="false"/>
        <arg name="enable_gyro" value="false"/>
        <arg name="enable_accel" value="false"/>

        <arg name="color_fps" value="6"/>
        <arg name="depth_fps" value="6"/>

        <arg name="publish_tf" value="true"/>
        <arg name="tf_publish_rate" value="0"/>
    </include>

    <arg name="PI" default="3.1415"/>

    <group ns="$(arg camera_name)">
        <arg name="pan" value="$(eval arg('pan_angle')/180.0*arg('PI'))"/>
        <arg name="tilt" value="$(eval arg('tilt_angle')/180.0*arg('PI'))"/>
        <arg name="role" value="$(eval arg('role_angle')/180.0*arg('PI'))"/>

        <arg name="tf_param1" default="0 $(arg ty) 0 $(arg pan) $(arg tilt) $(arg role)"/>
        <arg name="tf_param2" default="$(arg tx) 0 $(arg tz) 0 0 0"/>

        <group if="$(arg use_center_frame)">
            <node pkg="tf2_ros" type="static_transform_publisher" name="Camera2Center" args="$(arg tf_param1) camera_center_link $(arg camera_name)_link"/>
            <node pkg="tf2_ros" type="static_transform_publisher" name="Center2Base" args="$(arg tf_param2) $(arg base_link) camera_center_link"/>
        </group>
        <group unless="$(arg use_center_frame)">
            <node pkg="tf2_ros" type="static_transform_publisher" name="Camera2Base" args="$(arg tx) $(arg ty) $(arg tz) $(arg pan) $(arg tilt) $(arg role) $(arg base_link) $(arg camera_name)_link"/>
        </group>

        <node pkg="nodelet" type="nodelet" name="pt_x_filter" args="load pcl/PassThrough realsense2_manager_$(arg camera_name)">
            <remap from="~input" to="/$(arg camera_name)/depth_registered/points"/>
            <param name="input_frame" value="$(arg base_link)"/>
            <param name="filter_field_name" value="x"/>
            <param name="filter_limit_min" value="0.1"/>
            <param name="filter_limit_max" value="6.0"/>
            <param name="filter_limit_negative" value="false"/>
        </node>

        <node pkg="nodelet" type="nodelet" name="pt_z_filter" args="load pcl/PassThrough realsense2_manager_$(arg camera_name)">
            <remap from="~input" to="/$(arg camera_name)/pt_x_filter/output"/>
            <param name="input_frame" value="$(arg base_link)"/>
            <param name="filter_field_name" value="z"/>
            <param name="filter_limit_min" value="0.1"/>
            <param name="filter_limit_max" value="1.5"/>
            <param name="filter_limit_negative" value="false"/>
        </node>

        <node pkg="nodelet" type="nodelet" name="vg_filter" args="load pcl/VoxelGrid realsense2_manager_$(arg camera_name)">
            <remap from="~input" to="/$(arg camera_name)/pt_z_filter/output"/>
            <param name="input_frame" value="$(arg base_link)"/>
            <param name="filter_field_name" value="z"/>
            <param name="leaf_size" value="0.03"/>
            <param name="filter_limit_negative" value="false"/>
        </node>

    </group>

</launch>
