<launch>
  <arg name="frame_id" default="soma_link"/>
  <arg name="camera_link" default="camera_link"/>

  <arg name="camera1" default="camera_L"/>
  <arg name="camera2" default="camera_R"/>
  <!-- <arg name="camera1_link" default="$(arg camera1)_depth_frame"/>
  <arg name="camera2_link" default="$(arg camera2)_depth_frame"/> -->
  <arg name="camera1_link" default="$(arg camera1)_link"/>
  <arg name="camera2_link" default="$(arg camera2)_link"/>

  <!-- <arg name="cam_l_tx" default="0.7" />
  <arg name="cam_l_ty" default="0.285" />
  <arg name="cam_l_tz" default="0.8" />
  <arg name="cam_l_theta" default="-20.0" /> 
  <arg name="cam_l_phi" default="15.0" />
  <arg name="cam_l_psi" default="180.0" /> -->

  <!-- <arg name="cam_r_tx" default="0.7" />
  <arg name="cam_r_ty" default="-0.285" />
  <arg name="cam_r_tz" default="0.8" />
  <arg name="cam_r_theta" default="20.0" />
  <arg name="cam_r_phi" default="15.0" />
  <arg name="cam_r_psi" default="0.0" /> -->

  <!-- <arg name="cam_l_tx" default="0.0" />
  <arg name="cam_l_ty" default="0.285" />
  <arg name="cam_l_tz" default="0.0" />
  <arg name="cam_l_theta" default="70.0" />
  <arg name="cam_l_phi" default="180.0" />
  <arg name="cam_l_psi" default="80.0" />

  <arg name="cam_r_tx" default="0.0" />
  <arg name="cam_r_ty" default="-0.285" />
  <arg name="cam_r_tz" default="0.0" />
  <arg name="cam_r_theta" default="110.0" />
  <arg name="cam_r_phi" default="0.0" />
  <arg name="cam_r_psi" default="100.0" /> -->

  <arg name="cam_l_tx" default="0.4" />
  <arg name="cam_l_ty" default="0.285" />
  <arg name="cam_l_tz" default="-0.15" />
  <arg name="cam_l_theta" default="-20.0" />
  <arg name="cam_l_phi" default="15.0" />
  <arg name="cam_l_psi" default="0.0" />

  <arg name="cam_r_tx" default="0.0" />
  <arg name="cam_r_ty" default="-0.285" />
  <arg name="cam_r_tz" default="0.0" />
  <arg name="cam_r_theta" default="20.0" />
  <arg name="cam_r_phi" default="15.0" />
  <arg name="cam_r_psi" default="180.0" />

  <arg name="Pi" default="3.1415" />

  <arg name="_cam_l_theta" value="$(eval arg('cam_l_theta')/180.0*arg('Pi'))" />
  <arg name="_cam_l_phi" value="$(eval arg('cam_l_phi')/180.0*arg('Pi'))" />
  <arg name="_cam_l_psi" value="$(eval arg('cam_l_psi')/180.0*arg('Pi'))" />

  <arg name="_cam_r_theta" value="$(eval arg('cam_r_theta')/180.0*arg('Pi'))" />
  <arg name="_cam_r_phi" value="$(eval arg('cam_r_phi')/180.0*arg('Pi'))" />
  <arg name="_cam_r_psi" value="$(eval arg('cam_r_psi')/180.0*arg('Pi'))" />

  <arg name="cam_l_T" value="$(arg cam_l_tx) $(arg cam_l_ty) $(arg cam_l_tz)"/>
  <arg name="cam_l_Rot" value="$(arg _cam_l_theta) $(arg _cam_l_phi) $(arg _cam_l_psi)"/>
  <arg name="cam_l_arg" value="$(arg cam_l_T) $(arg cam_l_Rot) $(arg camera_link) $(arg camera1_link)" />

  <arg name="cam_r_T" value="$(arg cam_r_tx) $(arg cam_r_ty) $(arg cam_r_tz)"/>
  <arg name="cam_r_Rot" value="$(arg _cam_r_theta) $(arg _cam_r_phi) $(arg _cam_r_psi)"/>
  <arg name="cam_r_arg" value="$(arg cam_r_T) $(arg cam_r_Rot) $(arg camera_link) $(arg camera2_link)" />

  <node name="tf_l" pkg="tf2_ros" type="static_transform_publisher" args="$(arg cam_l_arg)"/>
  <node name="tf_r" pkg="tf2_ros" type="static_transform_publisher" args="$(arg cam_r_arg)"/>  
  <node name="tfBase2Camera" pkg="tf2_ros" type="static_transform_publisher" args="0.7 0 0.8 0 0 0 $(arg frame_id) $(arg camera_link)"/>

</launch>

 
